{"version":3,"sources":["views/bikeMap/index.js"],"names":["BikeMap","props","_this","Object","F_Project_bike_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","F_Project_bike_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","F_Project_bike_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","requestList","axios","get","url","data","params","then","res","code","setState","total_count","result","renderMap","handleFilter","Params","list","route_list","map","window","BMap","Map","gps1","split","gps2","Point","length","endPoint","centerAndZoom","addMapControl","drawBikeRoute","drawServiceArea","service_list","drawBikeIcon","bike_list","addControl","ScaleControl","anchor","BMAP_ANCHOR_TOP_RIGHT","NavigationControl","enableScrollWheelZoom","p","startPoint","startPointIcon","Icon","Size","imageSize","startMarker","Marker","icon","addOverlay","q","endPointIcon","endMarker","addEventListener","e","alert","point","lng","lat","trackPoint","i","push","polyline","Polyline","strokeColor","strokeWeight","strokeOpacity","area","lon","polygon","Polygon","fillColor","bike_List","bikeIcon","forEach","item","bikeMarker","state","bikeMapFormList","type","field","label","placeholder","initialValue","id","name","width","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_7__","antd_es_card__WEBPACK_IMPORTED_MODULE_1__","_components_baseForm__WEBPACK_IMPORTED_MODULE_8__","formList","filterSubmit","style","marginTop","height","Component"],"mappings":"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","file":"static/js/BikeMapPage.73fbd279.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Card } from 'antd'\r\nimport BaseForm from './../../components/baseForm'\r\nimport axios from './../../axios'\r\n\r\n\r\nclass BikeMap extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            total_count: 0\r\n        }\r\n        this.map = ''\r\n        this.bikeMapFormList = [\r\n            {\r\n                type: '城市',\r\n                field:'city'\r\n            }, {\r\n                type: '时间查询',\r\n                field:'search_time'\r\n            }, {\r\n                type: 'SELECT',\r\n                label: '订单状态',\r\n                field: 'order_status',\r\n                placeholder: '全部',\r\n                initialValue: '0',\r\n                list: [{ id: '0', name: '全部' }, { id: '1', name: '进行中' }, { id: '2', name: '行程结束' }],\r\n                width: 100\r\n            }\r\n        ]\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.requestList()\r\n    }\r\n\r\n    requestList = () => { // 查询列表数据\r\n        axios.get({\r\n            url: '/map/bike_list',\r\n            data: {\r\n                params: this.params\r\n            }\r\n        }).then((res) => {\r\n            if (res.code === 0) {\r\n                this.setState({\r\n                    total_count: res.result.total_count,\r\n                });\r\n                this.renderMap(res.result);\r\n            }\r\n        });\r\n    };\r\n\r\n    handleFilter = (Params) => { // 查询表单\r\n        this.params = Params\r\n        this.requestList();\r\n    }\r\n\r\n    renderMap = (res) => {  //渲染地图数据\r\n\r\n        let list = res.route_list;// 拿到route_list数据\r\n        this.map = new window.BMap.Map('container');   //(初始化地图)\r\n        let gps1 = list[0].split(',');\r\n        let startPoint = new window.BMap.Point(gps1[0], gps1[1]);// 起始坐标(0:经度,1:纬度)\r\n        let gps2 = list[list.length - 1].split(',');\r\n        let endPoint = new window.BMap.Point(gps2[0], gps2[1]);// 终点坐标\r\n\r\n        this.map.centerAndZoom(endPoint, 11); // 保证地图居中 \r\n\r\n        // //起点 -- 图标Icon/覆盖物Marker/添加addOverlay\r\n        // let startPointIcon = new window.BMap.Icon('/assets/start_point.png', new window.BMap.Size(36, 42), { // 设置图片样式\r\n        //     imageSize: new window.BMap.Size(36, 42),\r\n        //     anchor: new window.BMap.Size(18, 42) // 偏移\r\n        // });\r\n\r\n        // let bikeMarkerStart = new window.BMap.Marker(startPoint, { icon: startPointIcon });\r\n        // this.map.addOverlay(bikeMarkerStart);\r\n\r\n\r\n        // // 终点\r\n        // let endPointIcon = new window.BMap.Icon('/assets/end_point.png', new window.BMap.Size(36, 42), {\r\n        //     imageSize: new window.BMap.Size(36, 42),\r\n        //     anchor: new window.BMap.Size(18, 42)\r\n        // });\r\n        // let bikeMarkerEnd = new window.BMap.Marker(endPoint, { icon: endPointIcon });\r\n        // this.map.addOverlay(bikeMarkerEnd);\r\n\r\n\r\n        // bikeMarkerEnd.addEventListener(\"click\", function (e) {\r\n        //     alert(\"当前位置：\" + e.point.lng + \", \" + e.point.lat);\r\n        // });\r\n\r\n\r\n        // 调用添加地图控件方法\r\n        this.addMapControl()\r\n        // 调用路线图绘制方法\r\n        this.drawBikeRoute(res.route_list)\r\n        // 调用服务区绘制方法\r\n        this.drawServiceArea(res.service_list)\r\n        // 调用车辆图标绘制方法\r\n        this.drawBikeIcon(res.bike_list)\r\n\r\n    }\r\n\r\n    addMapControl = () => { //添加地图控件\r\n        let map = this.map\r\n        map.addControl(new window.BMap.ScaleControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }))\r\n        map.addControl(new window.BMap.NavigationControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }))\r\n        map.enableScrollWheelZoom(true);   //开启鼠标滚轮缩放\r\n    }\r\n\r\n    drawBikeRoute = (route_list) => { //绘制路线图\r\n        if (route_list.length > 0) {\r\n            // 绘制起点坐标icon\r\n            let first = route_list[0]\r\n            let p = first.split(',')\r\n            let startPoint = new window.BMap.Point(p[0], p[1])\r\n            let startPointIcon = new window.BMap.Icon('/assets/start_point.png', new window.BMap.Size(36, 42), {\r\n                imageSize: new window.BMap.Size(36, 42),\r\n                anchor: new window.BMap.Size(18, 42) //偏移\r\n            })\r\n            let startMarker = new window.BMap.Marker(startPoint, { icon: startPointIcon })\r\n            this.map.addOverlay(startMarker)\r\n\r\n            // 绘制终点坐标icon\r\n            let last = route_list[route_list.length - 1]\r\n            let q = last.split(',')\r\n            let endPoint = new window.BMap.Point(q[0], q[1])\r\n            let endPointIcon = new window.BMap.Icon('/assets/end_point.png', new window.BMap.Size(36, 42), {\r\n                imageSize: new window.window.BMap.Size(36, 42),\r\n                anchor: new window.BMap.Size(18, 42)\r\n            })\r\n            let endMarker = new window.BMap.Marker(endPoint, { icon: endPointIcon })\r\n            this.map.addOverlay(endMarker)\r\n\r\n            endMarker.addEventListener(\"click\", function (e) {\r\n                alert(\"当前位置：\" + e.point.lng + \", \" + e.point.lat);\r\n            });\r\n\r\n            //绘制行驶路线\r\n            let trackPoint = []\r\n            for (let i = 0; i < route_list.length; i++) {\r\n                let point = route_list[i].split(',')\r\n                trackPoint.push(new window.BMap.Point(point[0], point[1]))\r\n            }\r\n            let polyline = new window.BMap.Polyline(trackPoint, {\r\n                strokeColor: '#000000',\r\n                strokeWeight: 4,\r\n                strokeOpacity: 1\r\n            })\r\n            this.map.addOverlay(polyline)\r\n            this.map.centerAndZoom(endPoint, 11)\r\n\r\n        }\r\n    }\r\n\r\n    drawServiceArea = (area) => { //绘制服务区\r\n        let trackPoint = []\r\n        for (let i = 0; i < area.length; i++) {\r\n            let point = area[i]\r\n            trackPoint.push(new window.BMap.Point(point.lon, point.lat))\r\n        }\r\n        let polygon = new window.BMap.Polygon(trackPoint, { //包围服务区的折线\r\n            strokeColor: '#ef4136',\r\n            strokeWeight: 3,\r\n            strokeOpacity: 1,\r\n            fillColor: ''\r\n        })\r\n        this.map.addOverlay(polygon)\r\n    }\r\n\r\n    drawBikeIcon = (bike_List) => {// 添加地图中的自行车图标\r\n        \r\n        let bikeIcon = new window.BMap.Icon('/assets/bike.jpg', new window.BMap.Size(36, 42), {\r\n            imageSize: new window.BMap.Size(36, 42),\r\n            anchor: new window.BMap.Size(18, 42)\r\n        });\r\n        bike_List.forEach((item) => {\r\n            let p = item.split(',');\r\n            let point = new window.BMap.Point(p[0], p[1]);\r\n            let bikeMarker = new window.BMap.Marker(point, { icon: bikeIcon });\r\n            this.map.addOverlay(bikeMarker);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Card>\r\n                    <BaseForm formList={this.bikeMapFormList} filterSubmit={this.handleFilter} />\r\n                </Card>\r\n                <Card style={{ marginTop: 10 }}>\r\n                    <div>共 {this.state.total_count} 辆车</div>\r\n                    <div id=\"container\" style={{ height: 500 }}></div>\r\n                </Card>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BikeMap;"],"sourceRoot":""}